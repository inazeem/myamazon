<?php
/**
 * Implements hook_install().
 */


function myamazon_install()
{

    $t = get_t();

    // Step 1 - Define the custom content type

    $content_type = array(

        'type'          => 'product',
        'name'          => $t('Product'),
        'description'   => $t('Create a new product'),
        'title_label'   => $t('Product'),
        'base'          => 'node_content',
        //'custom'        => TRUE,

    );

    $node_type = node_type_set_defaults($content_type);
    node_add_body_field($node_type);
    node_type_save($node_type);


    //Step 2 - Create new fields

    $fields = array(


        // Product URL

        'field_url'	=> array(

            'field_name'   => 'field_url',
            'type'         => 'text_long',
            'cardinality'  => 1,

        ),

        // Product Price

        'field_price'	=> array(

            'field_name'   => 'field_price',
            'type'         => 'text',
            'cardinality'  => 1,

        ),

        // Large Image

        'field_large_image'	=> array(
            'field_name'   => 'field_large_image',
            'cardinality'  => 1,
            'type' => 'image',
            'settings' => array(
                'default_image' => 0,
                'uri_scheme' => 'public',
            ),
        ),

        // Product Asin

        'field_asin'	=> array(
            'field_name'   => 'field_asin',
            'type'         => 'text',
            'cardinality'  => 1,
        ),

    );

    foreach( $fields as $field ) { // Loop through fields and create them one by one

        field_create_field($field);

    }

    //Step 3 - Attach fields to content type

    $instances = array(



        // Product URl

        'field_url'	=> array(

            'field_name'   => 'field_url',
            'label'        => $t('Product Url'),
            'required'     => TRUE,
            'widget'       => array(
                'type'	=> 'text_textfield'
            ),


        ),


        // Product Price

        'field_price'	=> array(

            'field_name'   => 'field_price',
            'label'        => $t('Product Price'),
            'required'     => TRUE,
            'widget'       => array(
                'type'	=> 'text_textfield'
            ),

        ),

        // Large Image

        'field_large_image'	=> array(

            'field_name'   => 'field_large_image',
            'label'        => $t('Product Large Image'),
            'required'     => TRUE,
            'type' => 'image',
            'settings' => array(
                'max_filesize' => '',
                'alt_field' => 1,
                'default_image' => 0
            ),
            'widget' => array(
                'settings' => array(
                    'preview_image_style' => 'thumbnail',
                    'progress_indicator' => 'throbber',
                ),
            ),
            'display' => array(
                'default' => array(
                    'label' => 'hidden',
                    'type' => 'image',
                    'settings' => array('image_style' => 'medium', 'image_link' => ''),
                    'weight' => -1,
                ),
                'teaser' => array(
                    'label' => 'hidden',
                    'type' => 'image',
                    'settings' => array('image_style' => 'thumbnail', 'image_link' => 'content'),
                    'weight' => -1,
                ),
            ),

        ),

        // Product Asin

        'field_asin'	=> array(

            'field_name'   => 'field_asin',
            'label'        => $t('Product Asin'),
            'required'     => TRUE,
            'widget'       => array(
                'type'	=> 'text_textfield'
            ),

        ),



    );

    foreach( $instances as $instance ) { // Loop through our instances

        $instance['entity_type']   = 'node';
        $instance['bundle']        = 'product'; // Attach the instance to our content type

        field_create_instance($instance);

    }

    $term = new stdClass();
    $term->name = $t('Keywords');
    $term->machine_name = 'keywords';
    $term->description = $t('Amazon Keywords ');
    $term->heirarchy = 1;
    $term->module = 'module_name';
    $term->weight = 1;
    taxonomy_vocabulary_save($term);


}


/**
 * Implements hook_uninstall().
 */
function myamazon_uninstall()
{
    // Remove existing content

    $query = 'SELECT nid ';
    $query .= 'FROM {node} ';
    $query .= 'WHERE {node}.type = :type ';

    $result = db_query( $query, array(':type'	=> 'product') );

    $nids = array();

    foreach( $result as $row ) {

        $nids[] = $row->nid;

    }

    node_delete_multiple( $nids );

    // Delete fields and instances



    foreach( field_info_instances('node', 'product') as $field_name	=> $instance ) {

        field_delete_instance($instance);

    }

    // Delete content type

    node_type_delete('product');

    // Purge field batch

    field_purge_batch(1000); // Purge delete fields data

    $vocab = taxonomy_vocabulary_machine_name_load('keywords');
    taxonomy_vocabulary_delete($vocab->vid);
}
?>